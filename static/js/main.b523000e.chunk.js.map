{"version":3,"sources":["components/InputText.js","components/Button.js","components/TopMenu.js","action/index.js","action/types.js","components/BoardElement.js","components/Board.js","components/Main.js","components/Header.js","components/Footer.js","App.js","reducers/helpers/textOnlyNumber.js","reducers/helpers/GameEngine.js","reducers/mainGameReducer.js","reducers/showMenuReducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["InputText","value","this","props","onChange","placeholder","className","type","Component","Button","onClick","children","TopMenu","onBorderSizeChange","e","borderSizeChange","target","startGameClick","start","startGame","resetGameClick","resetGame","showMenu","show","mobile","console","log","boardSize","renderTopMenu","React","connect","state","mainGame","showTopMenu","size","payload","BoardElement","active","Board","getBoardTable","game","boardCreation","array","map","elements","i","element","index","position","key","timer","setInterval","clearInterval","board","Main","Header","renderHeader","Footer","renderFooter","App","clientY","document","addEventListener","screenSize","window","innerWidth","removeEventListener","positionY","width","textOnlyNumber","text","maxLength","length","currentText","GameEngine","tempArray","j","push","Math","random","currentBoard","positionAbove","positionUnder","positionLeft","positionRight","positionAbovePossible","positionUnderPossible","positionLeftPossible","positionRightPossible","counter","checkElement","live","firstArray","secondArray","INITIAL_STATE","combineReducers","action","documentElement","style","setProperty","gameEngine","newGameBoard","nextTurn","theSameArray","Boolean","location","hostname","match","Root","store","createStore","reducers","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b523000e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nclass InputText extends Component\r\n{\r\n    render(){\r\n        return (\r\n            <input\r\n             value={this.props.value}\r\n             onChange={this.props.onChange} \r\n             placeholder={this.props.placeholder}\r\n             className={this.props.className} \r\n             type=\"text\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputText;","import React, { Component } from 'react';\r\n\r\nclass Button extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <button \r\n            onClick={this.props.onClick} \r\n            className={this.props.className}\r\n            >\r\n            {this.props.children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport InputText from \"./InputText\";\r\nimport Button from \"./Button\";\r\nimport {connect} from \"react-redux\";\r\nimport {borderSizeChange,\r\n        startGame,\r\n        resetGame} from \"../action\";\r\nclass TopMenu extends React.Component{\r\n    onBorderSizeChange= e=>this.props.borderSizeChange(e.target.value);\r\n    startGameClick=start=>this.props.startGame(start);\r\n    resetGameClick=()=>this.props.resetGame();\r\n    showMenu=(start,show,mobile)=>{\r\n        console.log(\"m\",mobile);\r\n        if(mobile)\r\n        {\r\n            return true\r\n        }\r\n        if(!start)\r\n        {\r\n            return true;\r\n        }\r\n        else if(show)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    renderTopMenu(){\r\n        const {boardSize, start,show,mobile}=this.props;\r\n            return(\r\n                    <nav\r\n                    className={`top_menu ${this.showMenu(start,show,mobile)?\"\":\"top_menu--invisible\"}`}\r\n                    >\r\n                        <InputText \r\n                        onChange={this.onBorderSizeChange} \r\n                        value={boardSize} \r\n                        placeholder={`max size: ${mobile?\"50\":\"99\"}`} \r\n                        className=\"input top_menu__input\"\r\n                        >\r\n                        </InputText>\r\n                        <div className=\"top_menu__button-container\">\r\n                            <Button \r\n                            onClick={()=>{this.startGameClick(start)}}\r\n                            className=\"button top_menu__button\"\r\n                            >\r\n                            {start?\"stop\":\"start\"}\r\n                            </Button>\r\n                            {start?\r\n                            <Button\r\n                            className=\"button top_menu__button\"\r\n                            onClick={this.resetGameClick}\r\n                            >\r\n                            reset\r\n                            </Button>:null}\r\n                        </div>\r\n                    </nav>\r\n            )\r\n    }\r\n\r\n\r\n    render(){\r\n        const {start}=this.props;\r\n    return(\r\n     this.renderTopMenu(start)\r\n    )\r\n    }\r\n}   \r\nconst mapStateToProps=state=>{\r\n    return{\r\n        boardSize: state.mainGame.boardSize,\r\n        start: state.mainGame.start,\r\n        show: state.showMenu.showTopMenu,\r\n        mobile: state.mainGame.mobile\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{borderSizeChange, startGame, resetGame})(TopMenu);\r\n","import {BOADR_SIZE,\r\n        START_GAME,\r\n        GAME,\r\n        SHOW_TOP_MENU,\r\n        RESET_GAME,\r\n        MOBILE} from \"./types\";\r\n\r\nexport const borderSizeChange=size=>(\r\n    {\r\n        type:BOADR_SIZE,\r\n        payload: size\r\n    }\r\n)\r\nexport const startGame=(start)=>(\r\n    {\r\n        type:START_GAME,\r\n        payload: start\r\n    }\r\n)\r\nexport const game=()=>(\r\n    {\r\n        type: GAME,\r\n    }\r\n)\r\nexport const showTopMenu=(positionY)=>(\r\n    {\r\n        type: SHOW_TOP_MENU,\r\n        positionY:positionY\r\n    }\r\n)\r\nexport const resetGame=()=>(\r\n    {\r\n        type:RESET_GAME\r\n    }\r\n)\r\nexport const screenSize=(width)=>(\r\n    {\r\n        type: MOBILE,\r\n        mobile: width<=1024?true:false\r\n    }\r\n)","export const BOADR_SIZE=\"border_size\";\r\nexport const START_GAME=\"start_game\";\r\nexport const GAME=\"game\";\r\nexport const SHOW_TOP_MENU=\"show_top_menu\";\r\nexport const RESET_GAME=\"reset_game\";\r\nexport const MOBILE=\"mobile\";\r\n","import React,{Component} from \"react\";\r\n\r\nclass BoardElement extends Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div \r\n            className={`board__element board__element--${this.props.active?\"active\":\"inactive\"}`}>\r\n            </div>\r\n        )\r\n        }\r\n}\r\n\r\nexport default BoardElement;","import React,{Component} from 'react';\r\nimport BoardElement from \"./BoardElement\";\r\nimport {connect} from \"react-redux\";\r\nimport {game} from \"../action/index\";\r\n\r\nclass Board extends Component\r\n{\r\n    getBoardTable=()=>this.props.game();\r\n    boardCreation=(array)=>array.map((elements,i)=>elements.map((element,index)=><BoardElement active={element}  position={i+\"\"+index} key={i+\"\"+index}/>));\r\n\r\n\r\n     componentDidMount() {\r\n        this.timer= setInterval(()=>{this.getBoardTable();},1000);\r\n     }\r\n     componentWillUnmount()\r\n     {\r\n         clearInterval(this.timer);\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"board\">\r\n                {this.boardCreation(this.props.board)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        board: state.mainGame.board,\r\n    }\r\n} \r\nexport default connect(mapStateToProps,{game})(Board);","import React, { Component } from 'react'\r\nimport Board from \"./Board\";\r\n\r\nclass Main extends Component\r\n{\r\n    render(){\r\n        return(\r\n            <main className=\"main\">\r\n               <Board/>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Main;","import React,{Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nclass Header extends Component{\r\n\r\n    renderHeader=(start)=>{\r\n\r\n            return(\r\n                <header className={`header ${start?\"header--invisible\":\"\"}`}>\r\n                <h1 \r\n                className={`header__title ${start?\"header__title--invisible\":\"\"}`}\r\n                >\r\n                The game of life\r\n                </h1>\r\n            </header>\r\n            )\r\n\r\n    }\r\n    render(){\r\n        const{start}=this.props;\r\n        return(\r\n            this.renderHeader(start)\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        start: state.mainGame.start\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Header);","import React,{Component}from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Footer extends Component{\r\n    renderFooter(start)\r\n    {\r\n            return(\r\n                <footer\r\n                className={`footer ${start?\"footer--invisible\":\"\"}`}\r\n                >\r\n                    <p \r\n                    className={`footer__text ${start?\"footer__text--invisible\":\"\"}`}\r\n                    >\r\n                    all rights reserved &#9400;\r\n                    </p>\r\n                </footer>\r\n            )\r\n    }\r\n    render(){\r\n        const {start}=this.props\r\n        return(\r\n            this.renderFooter(start)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        start: state.mainGame.start\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Footer);","import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {showTopMenu,screenSize}from \"./action/index\"\nimport TopMenu from \"./components/TopMenu\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./sass/index.scss\"\n\nclass App extends Component {\n  showTopMenu=(e)=>\n  {\n      this.props.showTopMenu(e.clientY);\n  }\n  componentDidMount()\n  {\n    document.addEventListener(\"mousemove\",this.showTopMenu);\n    this.props.screenSize(window.innerWidth);\n  }\n  componentWillUnmount()\n  {\n    document.removeEventListener(\"mousemove\",this.showTopMenu);\n  }\n\n  render(){\n      return (\n          <div className=\"App\">\n              <Header/>\n              <TopMenu/>\n              <Main/>\n              <Footer/>\n          </div>\n      );\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    show: state.showMenu.showTopMenu\n  }\n}\nexport default connect(mapStateToProps,{showTopMenu,screenSize})(App);\n","const textOnlyNumber=(text,maxLength)=>{\r\n    let currentText=\"\";\r\n    let length;\r\n    if(text.length<maxLength)\r\n    {\r\n        length=text.length;\r\n    }\r\n    else\r\n    {\r\n        length=maxLength;\r\n    }\r\n    for(let i=0; i<length;i++)\r\n    {\r\n        if(text[i]===\"0\" || text[i]===\"1\" || text[i]===\"2\" || text[i]===\"3\" ||\r\n        text[i]===\"4\" || text[i]===\"5\" || text[i]===\"6\"||  text[i]===\"7\" ||\r\n        text[i]===\"8\" || text[i]===\"9\")\r\n        {\r\n            currentText+=text[i];\r\n        }\r\n    }\r\n    return currentText;\r\n}\r\n\r\n\r\n\r\nexport default textOnlyNumber;","class GameEngine\r\n{\r\n    constructor(size)\r\n    {\r\n        this.size=size\r\n    }\r\n    newGameBoard()\r\n    {\r\n        const board=[];\r\n        for(let i=0;i<this.size;i++)\r\n        {\r\n            const tempArray=[];\r\n            for(let j=0;j<this.size;j++)\r\n            {\r\n               tempArray.push(Math.random()<0.7?true:false)\r\n            } \r\n            board.push(tempArray)   \r\n        }\r\n        console.log(board);\r\n        return board;\r\n    }\r\n    nextTurn(board)\r\n    {\r\n        const currentBoard=[];\r\n        for(let i=0; this.size>i;i++)\r\n        {\r\n            const tempArray=[];\r\n            for(let j=0; this.size>j;j++)\r\n            {\r\n                const positionAbove=j-1;\r\n                const positionUnder=j+1;\r\n                const positionLeft=i-1;\r\n                const positionRight=i+1;\r\n\r\n                const positionAbovePossible=positionAbove>=0 && positionAbove<this.size;\r\n                const positionUnderPossible=positionUnder>=0 && positionUnder<this.size;\r\n                const positionLeftPossible=positionLeft>=0 && positionLeft<this.size;\r\n                const positionRightPossible=positionRight>=0 && positionRight<this.size;\r\n\r\n                let counter=0;\r\n                if(positionAbovePossible)\r\n                {\r\n                    if(board[i][positionAbove])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionUnderPossible)\r\n                {\r\n                    if(board[i][positionUnder])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionLeftPossible)\r\n                {\r\n                    if(board[positionLeft][j])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionRightPossible)\r\n                {\r\n                    if(board[positionRight][j])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionAbovePossible && positionLeftPossible)\r\n                {\r\n                    if(board[positionLeft][positionAbove])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionAbovePossible && positionRightPossible)\r\n                {\r\n                    if(board[positionRight][positionAbove])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionUnderPossible && positionRightPossible)\r\n                {\r\n                    if(board[positionRight][positionUnder])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                if(positionUnderPossible && positionLeftPossible)\r\n                {\r\n                    if(board[positionLeft][positionUnder])\r\n                    {\r\n                        counter++;\r\n                    }\r\n                }\r\n                tempArray.push(this.checkElement(counter, board[i][j]))\r\n            }\r\n            currentBoard.push(tempArray);   \r\n        }\r\n        return currentBoard;\r\n    }\r\n    checkElement(counter,live)\r\n    {\r\n        if(counter===3 && !live)\r\n        {\r\n            return true;\r\n        }\r\n        if((counter<2 || counter>3) && live)\r\n        {\r\n               return false;\r\n        }\r\n        if((counter===2 || counter===3)&& live)\r\n        {\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    theSameArray(firstArray,secondArray)\r\n    {\r\n        if(firstArray.length!==secondArray.length)\r\n        {\r\n            return false;\r\n        }\r\n        for(let i=0;i<firstArray.length;i++)\r\n        {\r\n            for(let j=0;j<secondArray.length;j++)\r\n            {\r\n                if(firstArray[i][j]!==secondArray[i][j])\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n}\r\nexport default GameEngine;","import {BOADR_SIZE,\r\n        START_GAME,\r\n        GAME,\r\n        RESET_GAME,\r\n        MOBILE} from \"../action/types\";\r\nimport textOnlyNumber from \"./helpers/textOnlyNumber\";\r\nimport GameEngine from \"./helpers/GameEngine\"\r\n\r\n\r\nconst INITIAL_STATE={boardSize:\"\",start:false,board:[],mobile:false};\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case MOBILE:\r\n            return {...state,mobile:action.mobile}\r\n\r\n        case BOADR_SIZE:\r\n            let payload=textOnlyNumber(action.payload,2);\r\n            if(action.payload>50 && state.mobile)\r\n            {\r\n                payload=50;\r\n            }\r\n            if(!state.start)\r\n            {\r\n                return {...state, boardSize: payload};\r\n            }\r\n            return state;\r\n        case START_GAME:\r\n            const {boardSize}=state;\r\n            document.documentElement.style.setProperty('--size',boardSize<10?10:boardSize);\r\n            return {...state,boardSize:boardSize<10?10:boardSize,start: !action.payload};\r\n        case RESET_GAME:\r\n            return INITIAL_STATE;\r\n        case GAME:\r\n            const gameEngine= new GameEngine(state.boardSize);\r\n            let board= state.board;\r\n            if(board.length===0 && state.start)\r\n            {\r\n                board=gameEngine.newGameBoard();\r\n            }\r\n            else if(state.start)\r\n            {\r\n                board=gameEngine.nextTurn(board); \r\n                if(gameEngine.theSameArray(board,state.board))\r\n                {\r\n                    return{...state,start:false,board:[]}\r\n                }   \r\n            }\r\n            return {...state,board: board};    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {SHOW_TOP_MENU} from \"../action/types\";\r\nconst INITIAL_STATE={showTopMenu:false}\r\n\r\nexport default(state=INITIAL_STATE,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case SHOW_TOP_MENU:\r\n        let show=false;\r\n        if(action.positionY<=200)\r\n        {\r\n            show=true;\r\n        }\r\n        return {...state,showTopMenu:show}\r\n        default:\r\n        return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport mainGameReducer from \"./mainGameReducer\";\r\nimport showMenuReducer from \"./showMenuReducer\";\r\nexport default combineReducers({\r\n    mainGame:mainGameReducer,\r\n    showMenu:showMenuReducer\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {createStore} from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nclass Root extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <Provider store={createStore(reducers)}>\r\n            <App/>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}